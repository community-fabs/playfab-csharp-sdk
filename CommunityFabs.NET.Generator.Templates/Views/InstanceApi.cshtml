@using CommunityFabs.NET.Generator.Templates.Models;
@model LegacyApiDocument;
using CommunityFabs.NET.Sdk.Common;
using CommunityFabs.NET.Sdk.Common.Http;
using CommunityFabs.NET.Sdk.Common.Interfaces;
using CommunityFabs.NET.Sdk.Common.Models;
using CommunityFabs.NET.Sdk.Common.Models.@Model.Name;
using System.Text.Json;

namespace CommunityFabs.NET.Sdk;

public class @($"PlayFab{Model.Name}InstanceApi : IPlayFab{Model.Name}Api") {
    public readonly PlayFabApiSettings? apiSettings = null;
    public readonly PlayFabAuthenticationContext? authenticationContext = null;

    public PlayFab@(Model.Name)InstanceApi() { }

    public PlayFab@(Model.Name)InstanceApi(PlayFabApiSettings settings)
    {
        apiSettings = settings;
    }

    public PlayFab@(Model.Name)InstanceApi(PlayFabAuthenticationContext context)
    {
        authenticationContext = context;
    }

    public PlayFab@(Model.Name)InstanceApi(PlayFabApiSettings settings, PlayFabAuthenticationContext context)
    {
        apiSettings = settings;
        authenticationContext = context;
    }

    /// <summary>
    /// Verify client login.
    /// </summary>
    public bool IsLoggedIn()
    {
        return authenticationContext?.IsClientLoggedIn() ?? false;
    }

    /// <summary>
    /// Clear the Client SessionToken which allows this Client to call API calls requiring login.
    /// A new/fresh login will be required after calling this.
    /// </summary>
    public void ForgetCredentials()
    {
        authenticationContext?.ForgetAllCredentials();
    }

@foreach (var apiCall in Model.Calls!)
{
    @(await Html.PartialAsync("InstanceApiMethod", apiCall))
}
}